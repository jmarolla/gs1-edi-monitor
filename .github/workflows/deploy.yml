name: Deploy to EC2 (monitoredi)

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (metadata only)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT || 22 }}
          script_stop: true
          script: |
            set -euo pipefail

            APP_USER="gs1edi"
            REPO_URL="https://github.com/jmarolla/gs1-edi-monitor.git"
            REPO_DIR="/opt/gs1-edi/repo"
            APP_DIR="/opt/gs1-edi/app"
            SERVICE="gs1-edi"

            # Paquetes básicos
            sudo apt-get update -y
            sudo apt-get install -y git python3-venv python3-pip rsync curl

            # Estructura y permisos
            id "$APP_USER" >/dev/null 2>&1 || sudo adduser --system --group --home /opt/gs1-edi "$APP_USER"
            sudo mkdir -p "$APP_DIR" "$REPO_DIR"
            sudo chown -R "$APP_USER:$APP_USER" /opt/gs1-edi

            # Clonar/actualizar repo (staging)
            if [ -d "$REPO_DIR/.git" ]; then
              sudo -u "$APP_USER" -H bash -lc "cd $REPO_DIR && git fetch --all --prune && git reset --hard origin/HEAD"
            else
              sudo -u "$APP_USER" -H bash -lc "git clone --depth=1 \"$REPO_URL\" \"$REPO_DIR\""
            fi

            # Sincronizar a la carpeta de la app (sin .git ni venv)
            sudo rsync -a --delete \
              --exclude ".git/" --exclude ".gitignore" --exclude "__pycache__/" \
              --exclude ".venv/" --exclude "venv/" --exclude "env/" \
              "$REPO_DIR/" "$APP_DIR/"
            sudo chown -R "$APP_USER:$APP_USER" /opt/gs1-edi

            # .streamlit/config.toml si vino en raíz (no toca secrets)
            sudo -u "$APP_USER" -H bash -lc "mkdir -p $APP_DIR/.streamlit"
            if [ -f "$APP_DIR/config.toml" ]; then
              sudo -u "$APP_USER" -H bash -lc "mv -f $APP_DIR/config.toml $APP_DIR/.streamlit/config.toml"
            fi

            # Virtualenv + dependencias
            sudo -u "$APP_USER" -H bash -lc "
              cd $APP_DIR
              [ -d .venv ] || python3 -m venv .venv
              source .venv/bin/activate
              pip install --upgrade pip
              pip install -r requirements.txt
            "

            # Reiniciar servicio existente + healthcheck local
            sudo systemctl restart "$SERVICE"
            sleep 2
            curl -I http://127.0.0.1:8501/
